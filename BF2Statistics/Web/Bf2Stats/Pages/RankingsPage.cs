// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace BF2Statistics.Web.Bf2Stats
{
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class RankingsPage : RankingsPageBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org" +
                    "/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xh" +
                    "tml\" class=\"inner\">\r\n<head>\r\n\t<title>Rankings, ");
            
            #line 6 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Title));
            
            #line default
            #line hidden
            this.Write("</title>\r\n\r\n\t<link rel=\"icon\" href=\"");
            
            #line 8 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/favicon.ico\" type=\"image/x-icon\">\r\n\t<link rel=\"shortcut icon\" href=\"");
            
            #line 9 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/favicon.ico\" type=\"image/x-icon\">\r\n\t<link rel=\"stylesheet\" type=\"text/css\" media" +
                    "=\"screen\" href=\"");
            
            #line 10 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/scripts/two-tiers.css\">\r\n\t<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" " +
                    "href=\"");
            
            #line 11 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/scripts/nt.css\">\r\n\t<link rel=\"stylesheet\" type=\"text/css\" media=\"print\" href=\"");
            
            #line 12 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/scripts/print.css\">\r\n\t<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href" +
                    "=\"");
            
            #line 13 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/scripts/default.css\">\r\n\r\n\t<script type=\"text/javascript\">/* no frames */ if(top." +
                    "location != self.location) top.location.replace(self.location);</script>\r\n\t<scri" +
                    "pt type=\"text/javascript\" src=\"");
            
            #line 16 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/scripts/nt2.js\"></script>\r\n\t<script type=\"text/javascript\" src=\"");
            
            #line 17 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write(@"/scripts/show.js""></script>

</head>

<body class=""inner"">

<div id=""page-1"">
	<div id=""page-2"">
		<h1 id=""page-title"">Current Rankings <small>""nuh uh! I'm better!""</small></h1>
		<div id=""page-3"">
			<div id=""content""><div id=""content-id""><!-- template header end == begin content below -->
				<table id=""rankslist-home"" class=""stat"" border=""0"" cellpadding=""0"" cellspacing=""0"">
				<tbody>
					<tr>
						<th>Stat</th>
						<th>#1</th>
						<th>#2</th>
						<th>#3</th>
						<th>#4</th>
						<th>#5</th>
					</tr>
				    ");
            
            #line 38 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"

					foreach(RankingStats Stat in this.Stats)
					{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>");
            
            #line 42 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
        
                        this.Write(Stat.Name + "</td>");
						foreach(Player Player in Stat.TopPlayers)
						{ 
                            if(!String.IsNullOrEmpty(Player.Name))
                            { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<img src=\"");
            
            #line 49 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/images/ranks/icon/rank_");
            
            #line 49 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Player.Rank));
            
            #line default
            #line hidden
            this.Write(".gif\" alt=\"");
            
            #line 49 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StatsData.GetRankName(Player.Rank)));
            
            #line default
            #line hidden
            this.Write("\">\r\n\t\t\t\t\t\t\t\t<a href=\"");
            
            #line 50 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/player?pid=");
            
            #line 50 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Player.Pid));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 50 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Player.Name));
            
            #line default
            #line hidden
            this.Write("</a>\r\n\t\t\t\t\t\t\t\t<br/>");
            
            #line 51 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Player.Value));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t</td>\r\n            \r\n\t\t\t\t\t\t");
            
            #line 54 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
 }
                           else
                             this.Write("<td>&nbsp;</td>");
                        } 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t</tr>\t\t\r\n\t\t\t\t\t\t<tr class=\"separator\">\r\n\t\t\t\t\t\t\t<td colspan=\"6\">");
            
            #line 60 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Stat.Desc));
            
            #line default
            #line hidden
            this.Write("</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t");
            
            #line 62 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\r\n\t\t\t\t<p><!-- end content == footer below --></p>\r\n\t\t" +
                    "\t\t<hr class=\"clear\">\r\n\t\r\n\t\t\t</div></div> <!-- content-id --><!-- content -->\r\n\r\n" +
                    "\t\t</div><!-- page 3 -->\t\r\n\t</div><!-- page 2 -->\r\n\t<div id=\"footer\">");
            
            #line 73 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"

        if(Program.Config.BF2S_CacheEnabled) 
           this.Write("This page was last updated " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") 
            + ". Next update will be " + DateTime.Now.AddMinutes(30).ToString("yyyy-MM-dd HH:mm:ss") + "<br>");
        
            
            #line default
            #line hidden
            this.Write("        Generated using the <a href=\'http://bf2statistics.com\'>BF2Statistics Cont" +
                    "rol Center</a>\r\n    </div>\r\n\t<ul id=\"navitems\">\r\n\t\t<li><a href=\"");
            
            #line 81 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("\">Home</a></li>\r\n\t\t<li><a href=\"");
            
            #line 82 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/myleaderboard\">My Leader Board</a></li>\r\n\t\t<li><a href=\"");
            
            #line 83 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/rankings\">Rankings</a></li>\r\n        <!--\r\n\t\t<li><a href=\"");
            
            #line 85 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/ubar\">UBAR</a></li>\r\n\t\t<li><a href=\"http://wiki.bf2s.com/\">Wiki</a></li>\r\n      " +
                    "  -->\r\n\t</ul>\r\n\t<form action=\"");
            
            #line 89 "D:\Programming\C#\Projects\BF2Statistics\BF2Statistics\Web\Bf2Stats\Pages\RankingsPage.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Root));
            
            #line default
            #line hidden
            this.Write("/search\" method=\"post\" id=\"getstats\">\r\n\t\t<label for=\"pid\">Get Stats</label>\r\n\t\t<i" +
                    "nput type=\"text\" name=\"searchvalue\" id=\"pid\" value=\"\" />\r\n\t\t<input type=\"submit\"" +
                    " class=\"btn\" value=\"Go\" />\r\n\t</form>\r\n</div><!-- page 1 -->\r\n</body>\r\n</html>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class RankingsPageBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
