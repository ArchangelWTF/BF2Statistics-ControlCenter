<#@ template language="C#" #>
<#@ import namespace="System.Collections.Generic" #>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" class="inner">
<head>
	<title><#= this.Title #></title>

	<link rel="icon" href="<#= this.Root #>/favicon.ico" type="image/x-icon">
	<link rel="shortcut icon" href="<#= this.Root #>/favicon.ico" type="image/x-icon">
	<link rel="stylesheet" type="text/css" media="screen" href="<#= this.Root #>/scripts/two-tiers.css">
	<link rel="stylesheet" type="text/css" media="screen" href="<#= this.Root #>/scripts/nt.css">
	<link rel="stylesheet" type="text/css" media="print" href="<#= this.Root #>/scripts/print.css">
	<link rel="stylesheet" type="text/css" media="screen" href="<#= this.Root #>/scripts/default.css">

	<script type="text/javascript">/* no frames */ if(top.location != self.location) top.location.replace(self.location);</script>
	<script type="text/javascript" src="<#= this.Root #>/scripts/nt2.js"></script>
	<script type="text/javascript" src="<#= this.Root #>/scripts/show.js"></script>
</head>
<body class="inner">

<div id="page-1">
	<div id="page-2">
	
		<h1 id="page-title">
			<img src="<#= this.Root #>/images/ranks/header/rank_<#= this.Player["rank"] #>.png" alt="" />
            <#= this.Player["name"] #><small> <#= StatsData.GetRankName(Int32.Parse(this.Player["rank"].ToString())) #></small>
		</h1>

		<div id="page-3">
	
			<div id="content">
				<div id="content-id"><!-- template header end == begin content below -->
			<div id="prefCol">
				<div id="prefers">
					<img class="solider" src="<#= this.PlayerImage #>" alt="<#= this.Player["name"] #> - <#= StatsData.GetArmyName(this.Favorites["army"]) #>" />
					<img class="weapon" src="<#= this.Root #>/images/weapons/weapon_<#= this.Favorites["weapon"] #>.jpg" alt="<#= StatsData.GetWeaponName(this.Favorites["weapon"]) #>" />
					<img class="vehicle" src="<#= this.Root #>/images/vehicles/vehicles_<#= this.Favorites["vehicle"] #>.jpg" alt="<#= StatsData.GetVehicleName(this.Favorites["vehicle"]) #>" />
					<img class="kit" src="<#= this.Root #>/images/kits/kit_<#= this.Favorites["kit"] #>.jpg" alt="<#= StatsData.GetKitName(this.Favorites["kit"]) #>" />
					<img class="map" src="<#= this.Root #>/images/maps/map_<#= this.FavoriteMapId #>.jpg" alt="<#= StatsData.GetMapName(this.FavoriteMapId) #>" />
					<img id="flag" src="<#= this.Root #>/images/flags/<#= this.Player["country"] #>.png" alt="<#= this.Player["country"] #>" width="32" height="24" />
				</div>
				<a id="add-to-mlb" href="<#= this.Root #>/myleaderboard?add=<#= this.Player["id"] #>"><img src="<#= this.Root #>/images/user_add.png" alt="Add to My Leader Board" /></a>
			</div>
			
			<table border="0" cellpadding="0" cellspacing="0" id="profile">
				<tr valign="top">
					<th>Player Profile</th>
					<th>Team Profile</th>
					<th>Combat Profile</th>
				</tr>
				<tr valign="top">
					<td>
						<table border="0" cellpadding="0" cellspacing="0" id="player">
							<tr>
								<th colspan="2">Scores</th>
							</tr>
							<tr>
								<td>Global</td>
								<td><#= this.FormatNumber(this.Player["score"]) #></td>
							</tr>
							<tr>
								<td>Team</td>
								<td><#= this.FormatNumber(this.Player["teamscore"]) #></td>
							</tr>
							<tr>
								<td>Combat</td>
								<td><#= this.FormatNumber(this.Player["skillscore"]) #></td>
							</tr>
							<tr>
								<td>Commander</td>
								<td><#= this.FormatNumber(this.Player["cmdscore"]) #></td>
							</tr>
							<tr>
								<th colspan="2">Time</th>
							</tr>
							<tr>
								<td nowrap="nowrap">Parachute</td>
								<td nowrap="nowrap"><#= this.FormatTime(this.VehicleData[7].Time) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Commander</td>
								<td nowrap="nowrap"><#= this.FormatTime(this.Player["cmdtime"]) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Squad Leader </td>
								<td nowrap="nowrap"><#= this.FormatTime(this.Player["sqltime"]) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Squad Member </td>
								<td nowrap="nowrap"><#= this.FormatTime(this.Player["sqmtime"]) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Lone Wolf </td>
								<td nowrap="nowrap"><#= this.FormatTime(this.Player["lwtime"]) #></td>
							</tr>
							<tr>
								<td>Total</td>
								<td nowrap="nowrap"><#= this.FormatTime(this.Player["time"]) #></td>
							</tr>
						</table>
					</td>
					<td>
						<table border="0" cellpadding="0" cellspacing="0" id="team">	
							<tr>
								<td nowrap="nowrap">Wins &amp; Losses</td>
								<td nowrap="nowrap">
                                    <#= this.FormatNumber(this.Player["wins"]) #>&nbsp;/&nbsp;<#= this.FormatNumber(this.Player["losses"]) #>
                                    &nbsp;(<#= this.WinLossRatio #>)
								</td>
							</tr>
							<tr>
								<th colspan="2">Capture Points</th>
							</tr>
							<tr>
								<td nowrap="nowrap">Captured CP </td>
								<td><#= this.FormatNumber(this.Player["captures"]) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Capture Assist </td>
								<td><#= this.FormatNumber(this.Player["captureassists"]) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Defended CP </td>
								<td><#= this.FormatNumber(this.Player["defends"]) #></td>
							</tr>
							<tr>
								<th colspan="2">Teamwork</th>
							</tr>
							<tr>
								<td nowrap="nowrap">Kill Assist </td>
								<td><#= this.FormatNumber(this.KillAssists) #></td>
							</tr>
							<tr>
								<td>Heal</td>
								<td><#= this.FormatNumber(this.Player["heals"]) #></td>
							</tr>
							<tr>
								<td>Revive</td>
								<td><#= this.FormatNumber(this.Player["revives"]) #></td>
							</tr>
							<tr>
								<td>Support</td>
								<td><#= this.FormatNumber(this.Player["ammos"]) #></td>
							</tr>
							<tr>
								<td>Repair</td>
								<td><#= this.FormatNumber(this.Player["repairs"]) #></td>
							</tr>
							<tr>
								<td>Driver</td>
								<td><#= this.FormatNumber(this.Player["driverspecials"]) #></td>
							</tr>
						</table>
					</td>
					<td>
						<table border="0" cellpadding="0" cellspacing="0" id="combat">
							<tr>
								<td>Accuracy</td>
								<td><#= this.FormatFloat(this.WeaponSummary.AverageAccuracy, 2) #>%</td>
							</tr>
							<tr>
								<td><acronym title="Score per minute">SPM</acronym></td>
								<td><#= this.FormatFloat(this.ScorePerMin, 4) #></td>
							</tr>
							<tr>
								<td>Suicides </td>
								<td><#= this.FormatNumber(this.Player["suicides"]) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">K/D Ratio</td>
								<td><#= this.FormatFloat(this.KillDeathRatio, 3) #></td>
							</tr>
							<tr>
								<th colspan="2">Kills</th>
							</tr>
							<tr>
								<td nowrap="nowrap">Total &amp; Streak</td>
								<td><#= this.FormatNumber(this.Player["kills"]) #> / <#= this.FormatNumber(this.Player["killstreak"]) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Per Minute </td>
								<td><#= this.FormatFloat(this.KillsPerMin, 3) #></td>
							</tr>
							<tr>
								<td nowrap="nowrap">Per Round </td>
								<td><#= this.FormatFloat(this.KillsPerRound, 3) #></td>
							</tr>
							<tr>
								<th colspan="2">Deaths</th>
							</tr>
							<tr>
								<td>Total &amp; Streak</td>
								<td><#= this.FormatNumber(this.Player["deaths"]) #> / <#= this.FormatNumber(this.Player["deathstreak"]) #></td>
							</tr>
							<tr>
								<td>Per Minute </td>
								<td><#= this.FormatFloat(this.DeathsPerMin, 3) #></td>
							</tr>
							<tr>
								<td>Per Round </td>
								<td><#= this.FormatFloat(this.DeathsPerRound, 3) #></td>
							</tr>
						</table>
					</td>
				</tr>
			</table>
			<hr class="clear" />
			<em style="font-size: 9px; text-align: left; display: block;clear: both;padding-left: 8px;">B.R. = Best Round</em>
			<div id="stats">
				<div class="col">
					<table border="0" cellspacing="0" cellpadding="0" id="army" class="stat sortable">
						<tr>
							<th>Army</th>
							<th>Time</th>
							<th>Wins</th>
							<th>Losses</th>
							<th>Ratio</th>
							<th>B.R.</th>
						</tr>
                        <#
						for (int i = 0; i < this.ArmyData.Count; i++)
						{
							this.Write((this.Favorites["army"] == i) ? "<tr class=\"favorite\">" : "<tr>"); #>
							<td id="army-<#= i #>"><#= StatsData.GetArmyName(this.ArmyData[i].Id) #></td>
							<td nowrap="nowrap" title="<#= this.ArmyData[i].Time #>"><#= this.FormatTime(this.ArmyData[i].Time) #></td>
							<td><#= this.FormatNumber(this.ArmyData[i].Wins) #></td>
							<td><#= this.FormatNumber(this.ArmyData[i].Losses) #></td>
							<td><#= this.FormatFloat(this.ArmyData[i].Ratio, 2)#></td>
							<td><#= this.FormatNumber(this.ArmyData[i].Best) #></td>
						</tr>
						<# } #>	
						<tr class="totals sortbottom">
                            <td>Total</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.ArmySummary.TotalTime) #></td>
							<td><#= this.FormatNumber(this.ArmySummary.TotalWins) #></td>
							<td><#= this.FormatNumber(this.ArmySummary.TotalLosses) #></td>
							<td> &ndash; </td>
							<td> &ndash; </td>
						</tr>
						<tr class="averages sortbottom">
							<td>Averages</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.ArmySummary.AverageTime) #></td>
							<td><#= this.FormatNumber(this.ArmySummary.AverageWins) #></td>
							<td><#= this.FormatNumber(this.ArmySummary.AverageLosses) #></td>
							<td><#= this.FormatFloat(this.ArmySummary.Ratio, 2) #></td>
							<td><#= this.FormatNumber(this.ArmySummary.AverageBest) #></td>
						</tr>
					</table>
					<table border="0" cellspacing="0" cellpadding="0" id="map" class="stat sortable">
						<tr>
							<th>Map</th>
							<th>Time</th>
							<th>Wins</th>
							<th>Losses</th>
							<th>Ratio</th>
							<th>B.R.</th>
						</tr>
                        <#
						for (int i = 0; i < this.MapData.Count; i++)
						{
							this.Write((this.Favorites["map"] == i) ? "<tr class=\"favorite\">" : "<tr>"); #>
							<td id="map-<#= i #>"><#= StatsData.GetMapName(this.MapData[i].Id) #></td>
							<td nowrap="nowrap" title="<#= this.MapData[i].Time #>"><#= this.FormatTime(this.MapData[i].Time) #></td>
							<td><#= this.FormatNumber(this.MapData[i].Wins) #></td>
							<td><#= this.FormatNumber(this.MapData[i].Losses) #></td>
							<td><#= this.FormatFloat(this.MapData[i].Ratio, 2) #></td>
							<td><#= this.FormatNumber(this.MapData[i].Best) #></td>
						</tr>
						<# } #>
                        <tr class="totals sortbottom">
                            <td>Total</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.MapSummary.TotalTime) #></td>
							<td><#= this.FormatNumber(this.MapSummary.TotalWins) #></td>
							<td><#= this.FormatNumber(this.MapSummary.TotalLosses) #></td>
							<td> &ndash; </td>
							<td> &ndash; </td>
						</tr>
						<tr class="averages sortbottom">
							<td>Averages</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.MapSummary.AverageTime) #></td>
							<td><#= this.FormatNumber(this.MapSummary.AverageWins) #></td>
							<td><#= this.FormatNumber(this.MapSummary.AverageLosses) #></td>
							<td><#= this.FormatFloat(this.MapSummary.Ratio, 2) #></td>
							<td><#= this.FormatNumber(this.MapSummary.AverageBest) #></td>
						</tr>
					</table>
					<table id="theater" class="stat sortable" border="0" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<th><a href="#" class="sortheader" onclick="ts_resortTable(this);return false;">Theater<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></th>
								<th><a href="#" class="sortheader" onclick="ts_resortTable(this);return false;">Time<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></th>
								<th><a href="#" class="sortheader" onclick="ts_resortTable(this);return false;">Wins<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></th>
								<th><a href="#" class="sortheader" onclick="ts_resortTable(this);return false;">Losses<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></th>
								<th><a href="#" class="sortheader" onclick="ts_resortTable(this);return false;">Ratio<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></th>
								<th><a href="#" class="sortheader" onclick="ts_resortTable(this);return false;">B.R.<span class="sortarrow">&nbsp;&nbsp;&nbsp;</span></a></th>
							</tr>
							<#
						    for (int i = 0; i < this.TheaterData.Count; i++)
						    {
							    this.Write((this.Favorites["theater"] == i) ? "<tr class=\"favorite\">" : "<tr>"); #>
							    <td id="map-<#= i #>"><#= this.TheaterData[i].Name #></td>
							    <td nowrap="nowrap" title="<#= this.TheaterData[i].Time #>"><#= this.FormatTime(this.TheaterData[i].Time) #></td>
							    <td><#= this.FormatNumber(this.TheaterData[i].Wins) #></td>
							    <td><#= this.FormatNumber(this.TheaterData[i].Losses) #></td>
							    <td><#= this.FormatFloat(this.TheaterData[i].Ratio, 2) #></td>
							    <td><#= this.FormatNumber(this.TheaterData[i].Best) #></td>
						    </tr>
						    <# } #>
						</tbody>
					</table>

					<table border="0" cellspacing="0" cellpadding="0" id="vehicle" class="stat sortable">
						<tr>
							<th>Vehicle</th>
							<th>Time</th>
							<th>Kills</th>
							<th>Deaths</th>
							<th>Ratio</th>
							<th>Road Kills</th>
						</tr>
                        <#
                        for (int i = 0; i < 7; i++)
						{   
                            this.Write((this.Favorites["vehicle"] == i) ? "<tr class=\"favorite\">" : "<tr>"); #>
							<td id="vehicle-<#= i #>"><#= StatsData.GetVehicleName(i) #></td>
							<td nowrap="nowrap" title="<#= this.VehicleData[i].Time #>"><#= this.FormatTime(this.VehicleData[i].Time) #></td>
							<td>
                                <span class="abbr" alt="Accounts for <#= this.FormatFloat(this.VehicleData[i].KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.VehicleData[i].Kills) #>
                                </span>
                            </td>
							<td><#= this.FormatNumber(this.VehicleData[i].Deaths) #></td>
							<td><#= this.FormatFloat(this.VehicleData[i].Ratio, 4) #></td>
							<td><#= this.FormatNumber(this.VehicleData[i].RoadKills) #></td>
						</tr>
						<# } #>
						<tr class="averages sortbottom">
                            <td>Total</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.VehicleSummary.TotalTime) #></td>
							<td>
								<span class="abbr" alt="Accounts for <#= this.FormatFloat(this.VehicleSummary.KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.VehicleSummary.TotalKills) #>
								</span>
							</td>
							<td><#= this.FormatNumber(this.VehicleSummary.TotalDeaths) #></td>
							<td> &ndash; </td>
							<td><#= this.FormatNumber(this.VehicleSummary.TotalRoadKills) #></td>
						</tr>
						<tr class="totals sortbottom">			
							<td>Averages</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.VehicleSummary.AverageTime) #></td>
							<td><#= this.FormatNumber(this.VehicleSummary.AverageKills) #></td>
							<td><#= this.FormatNumber(this.VehicleSummary.AverageDeaths) #></td>
							<td><#= this.FormatFloat(this.VehicleSummary.AverageRatio, 2) #></td>
							<td><#= this.FormatNumber(this.VehicleSummary.AverageRoadKills) #></td>
						</tr>
					</table>
				</div><!-- END COL LEFT -->
			
				<!-- COL RIGHT -->
				<div class="col">
					<table border="0" cellspacing="0" cellpadding="0" id="expansion" class="stat">
						<tr>
							<th>Expansion</th>
							<th>BF2</th>
							<th>SF</th>
							<th>EF</th>
							<th>AF</th>
						</tr>
						<tr>
							<td>Time</td>
							<td nowrap="nowrap" title="<#= this.ExpackTime["bf"] #>"><#= this.FormatTime(this.ExpackTime["bf"]) #></td>
							<td nowrap="nowrap" title="<#= this.ExpackTime["sf"] #>"><#= this.FormatTime(this.ExpackTime["sf"]) #></td>
							<td nowrap="nowrap" title="<#= this.ExpackTime["ef"] #>"><#= this.FormatTime(this.ExpackTime["ef"]) #></td>
							<td nowrap="nowrap" title="<#= this.ExpackTime["af"] #>"><#= this.FormatTime(this.ExpackTime["af"]) #></td>
						</tr>
					</table>

					<table border="0" cellspacing="0" cellpadding="0" id="kit" class="stat sortable">
						<tr>
							<th>Kit</th>
							<th>Time</th>
							<th>Kills</th>
							<th>Deaths</th>
							<th>Ratio</th>
						</tr>
						<#
                        for (int i = 0; i < 7; i++)
						{
							this.Write((this.Favorites["kit"] == i) ? "<tr class=\"favorite\">" : "<tr>"); #>
							<td id="kit-<#= i #>"><#= StatsData.GetKitName(i) #></td>
							<td nowrap="nowrap" title="<#= this.KitData[i].Time #>"><#= this.FormatTime(this.KitData[i].Time) #></td>
							<td>
                                <span class="abbr" alt="Accounts for <#= this.FormatFloat(this.KitData[i].KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.KitData[i].Kills) #>
                                </span>
                            </td>
							<td><#= this.FormatNumber(this.KitData[i].Deaths) #></td>
							<td><#= this.FormatFloat(this.KitData[i].Ratio, 4) #></td>
						</tr>
						<# } #>
						<tr class="averages sortbottom">
                            <td>Total</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.KitSummary.TotalTime) #></td>
							<td>
								<span class="abbr" alt="Accounts for <#= this.FormatFloat(this.KitSummary.KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.KitSummary.TotalKills) #>
								</span>
							</td>
							<td><#= this.FormatNumber(this.KitSummary.TotalDeaths) #></td>
							<td> &ndash; </td>
						</tr>
						<tr class="totals sortbottom">			
							<td>Averages</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.KitSummary.AverageTime) #></td>
							<td><#= this.FormatNumber(this.KitSummary.AverageKills) #></td>
							<td><#= this.FormatNumber(this.KitSummary.AverageDeaths) #></td>
							<td><#= this.FormatFloat(this.KitSummary.AverageRatio, 2) #></td>
						</tr>
					</table>
			
					<table border="0" cellspacing="0" cellpadding="0" id="weapon" class="stat sortable">
						<tr>
							<th>Weapon</th>
							<th>Time</th>
							<th>Kills</th>
							<th>Deaths</th>
							<th>Ratio</th>
							<th>Acc</th>
						</tr>
						<#
                        for (int i = 0; i < 10; i++)
                        {
                            this.Write((this.Favorites["weapon"] == i) ? "<tr class=\"favorite\">" : "<tr>"); #>
							<td id="weapon-<#= i #>"><#= StatsData.GetWeaponName(i) #></td>
							<td nowrap="nowrap" title="<#= this.WeaponData[i].Time #>"><#= this.FormatTime(this.WeaponData[i].Time) #></td>
							<td>
                                <span class="abbr" alt="Accounts for <#= this.FormatFloat(this.WeaponData[i].KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.WeaponData[i].Kills) #>
                                </span>
                            </td>
							<td><#= this.FormatNumber(this.WeaponData[i].Deaths) #></td>
							<td><#= this.FormatFloat(this.WeaponData[i].Ratio, 4) #></td>
							<td title="<#= this.FormatFloat(this.WeaponData[i].Accuracy, 2) #>">
                                <span class="abbr" alt="Shots: <#= this.FormatNumber(this.WeaponData[i].Fired) #>, Hits: <#= this.FormatNumber(this.WeaponData[i].Hits) #>">
                                    <#= this.FormatFloat(this.WeaponData[i].Accuracy, 2) #>%
                                </span>
                            </td>
						</tr>
						<# }
                        for (int i = 0; i < 3; i++)
                        {
                            this.Write((this.Favorites["weapon"] == i + 9) ? "<tr class=\"favorite\">" : "<tr>"); #>
							<td id="weapon-<#= i #>"><#= StatsData.GetWeaponName2(i) #></td>
							<td nowrap="nowrap" title="<#= this.WeaponData2[i].Time #>"><#= this.FormatTime(this.WeaponData2[i].Time) #></td>
							<td>
                                <span class="abbr" alt="Accounts for <#= this.FormatFloat(this.WeaponData2[i].KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.WeaponData2[i].Kills) #>
                                </span>
                            </td>
							<td><#= this.FormatNumber(this.WeaponData2[i].Deaths) #></td>
							<td><#= this.FormatFloat(this.WeaponData2[i].Ratio, 4) #></td>
							<td title="<#= this.FormatFloat(this.WeaponData2[i].Accuracy, 2) #>">
                                <span class="abbr" alt="Shots: <#= this.FormatNumber(this.WeaponData2[i].Fired) #>, Hits: <#= this.FormatNumber(this.WeaponData2[i].Hits) #>">
                                    <#= this.FormatFloat(this.WeaponData2[i].Accuracy, 2) #>%
                                </span>
                            </td>
						</tr>
						<# } #>
                        <tr class="averages sortbottom">
                            <td>Total</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.WeaponSummary.TotalTime) #></td>
							<td>
								<span class="abbr" alt="Accounts for <#= this.FormatFloat(this.WeaponSummary.KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.WeaponSummary.TotalKills) #>
								</span>
							</td>
							<td><#= this.FormatNumber(this.WeaponSummary.TotalDeaths) #></td>
							<td> &ndash; </td>
                            <td> &ndash; </td>
						</tr>
						<tr class="totals sortbottom">			
							<td>Averages</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.WeaponSummary.AverageTime(15)) #></td>
							<td><#= this.FormatNumber(this.WeaponSummary.AverageKills(15)) #></td>
							<td><#= this.FormatNumber(this.WeaponSummary.AverageDeaths(15)) #></td>
							<td><#= this.FormatFloat(this.WeaponSummary.AverageRatio, 2) #></td>
                            <td>
                                <span class="abbr" alt="Shots: <#= this.FormatNumber(this.WeaponSummary.TotalFired) #>, Hits: <#= this.FormatNumber(this.WeaponSummary.TotalHits) #>">
                                    <#= this.FormatFloat(this.WeaponSummary.AverageAccuracy, 2) #>%
                                </span>
                            </td>
						</tr>
					</table>
			
					<table border="0" cellspacing="0" cellpadding="0" id="equipment" class="stat sortable">
						<tr>
							<th>Equipment</th>
							<th>Time</th>
							<th>Kills</th>
							<th>Deaths</th>
							<th>Ratio</th>
							<th>Usage</th>
						</tr>
						<#
                        for (int i = 9; i < 18; i++)
                        {
                            this.Write((this.Favorites["equipment"] == i) ? "<tr class=\"favorite\">" : "<tr>"); #>
							<td id="weapon-<#= i #>"><#= StatsData.GetWeaponName(i) #></td>
							<td nowrap="nowrap" title="<#= this.WeaponData[i].Time #>"><#= this.FormatTime(this.WeaponData[i].Time) #></td>
							<td>
                                <span class="abbr" alt="Accounts for <#= this.FormatFloat(this.WeaponData[i].KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.WeaponData[i].Kills) #>
                                </span>
                            </td>
							<td><#= this.FormatNumber(this.WeaponData[i].Deaths) #></td>
							<td><#= this.FormatFloat(this.WeaponData[i].Ratio, 4) #></td>
							<td><#= this.FormatNumber(this.WeaponData[i].Fired) #></td>
						</tr>
						<# } #>
					    <tr class="averages sortbottom">
                            <td>Total</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.EquipmentSummary.TotalTime) #></td>
							<td>
								<span class="abbr" alt="Accounts for <#= this.FormatFloat(this.EquipmentSummary.KillsAcctFor, 2) #>% of all kills">
                                    <#= this.FormatNumber(this.EquipmentSummary.TotalKills) #>
								</span>
							</td>
							<td><#= this.FormatNumber(this.EquipmentSummary.TotalDeaths) #></td>
							<td> &ndash; </td>
                            <td> &ndash; </td>
						</tr>
						<tr class="totals sortbottom">			
							<td>Averages</td>
							<td nowrap="nowrap"><#= this.FormatTime(this.EquipmentSummary.AverageTime(9)) #></td>
							<td><#= this.FormatNumber(this.EquipmentSummary.AverageKills(9)) #></td>
							<td><#= this.FormatNumber(this.EquipmentSummary.AverageDeaths(9)) #></td>
							<td><#= this.FormatFloat(this.EquipmentSummary.AverageRatio, 2) #></td>
                            <td><#= this.FormatNumber(this.EquipmentSummary.AverageFired(9)) #></td>
						</tr>
					</table>
					<table border="0" cellspacing="0" cellpadding="0" id="fov" class="stat">
						<tr>
							<th colspan="2">Favorite Victims &amp; Worst Enemies</th>
						</tr>
						<tr>
							<td>Favorite Victim<br />(Kills to) </td>
								<# if (this.TopVictims.Count > 0) { #>
								    <td nowrap="nowrap">
                                    <acronym title="his rank is <#= StatsData.GetRankName(this.TopVictims[0].Rank) #>">
                                        <img src="<#= this.Root #>/images/ranks/icon/rank_<#= this.TopVictims[0].Rank #>.gif"> 
                                        <a rel="nofollow" href="?pid=<#= this.TopVictims[0].Pid #>"><#= this.TopVictims[0].Name #></a>
                                    </acronym> (<#= this.TopVictims[0].Count #>)
                            </td>
								<# } else { #>
							<td>You are no one\'s worst enemy. Go bully someone.</td>
							    <# } #>
						</tr>
						<tr>
							<td nowrap="nowrap">More Victims<br />(Top 10)</td>
							<td>
								<# 
                                if(this.TopVictims.Count > 1)
                                {
                                    for (int i = 1; i < this.TopVictims.Count; i++)
								    { #>
										<acronym title="his rank is <#= StatsData.GetRankName(this.TopVictims[i].Rank) #>">
                                            <img src="<#= this.Root #>/images/ranks/icon/rank_<#= this.TopVictims[i].Rank #>.gif"> 
                                            <a rel="nofollow" href="?pid=<#= this.TopVictims[i].Pid #>"><#= this.TopVictims[i].Name #></a>
                                        </acronym> (<#= this.TopVictims[i].Count #>), 
								    <# } #>
                                <# } #>
							</td>	
						</tr>
						<tr>
							<td nowrap="nowrap">Worst Enemy<br />(Deaths by)</td>
                            <# if (this.TopEnemies.Count > 0) { #>
								    <td nowrap="nowrap">
                                    <acronym title="his rank is <#= StatsData.GetRankName(this.TopEnemies[0].Rank) #>">
                                        <img src="<#= this.Root #>/images/ranks/icon/rank_<#= this.TopEnemies[0].Rank #>.gif"> 
                                        <a rel="nofollow" href="?pid=<#= this.TopEnemies[0].Pid #>"><#= this.TopEnemies[0].Name #></a>
                                    </acronym> (<#= this.TopEnemies[0].Count #>)
                            </td>
								<# } else { #>
							<td>It seems you are invincible!</td>
							    <# } #>
						</tr>
						<tr>
							<td nowrap="nowrap">More Enemies<br />(Top 10)</td>
							<td>
								<# 
                                if(this.TopEnemies.Count > 1)
                                {
                                    for (int i = 1; i < this.TopEnemies.Count; i++)
								    { #>
										<acronym title="his rank is <#= StatsData.GetRankName(this.TopEnemies[i].Rank) #>">
                                            <img src="<#= this.Root #>/images/ranks/icon/rank_<#= this.TopEnemies[i].Rank #>.gif"> 
                                            <a rel="nofollow" href="?pid=<#= this.TopEnemies[i].Pid #>"><#= this.TopEnemies[i].Name #></a>
                                        </acronym> (<#= this.TopEnemies[i].Count #>), 
								    <# } #>
                                <#    } else { #>
                                    No one has picked on you much.
                                <#    } #>
							</td>
						</tr>
					</table>
			
					<table border="0" cellpadding="0" cellspacing="0" id="misc" class="stat">
						<tr>
							<th colspan="2">Misc. Stats</th>

						</tr>
						<tr>
							<td>PID (Player ID Number)</td>
							<td nowrap="nowrap"><#= this.Player["id"] #> </td>
						</tr>
						<tr>
							<td>Enrollment Date </td>
							<td nowrap="nowrap"><#= this.FormatDate(this.Player["joined"]) #></td>
						</tr>
						<tr>
							<td>Last Battle On </td>
							<td nowrap="nowrap"><#= this.FormatDate(this.Player["lastonline"]) #></td>
						</tr>
						<tr>
							<td>Last Update </td>
							<td nowrap="nowrap"><#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #></td>
						</tr>
						<tr>
							<td>Next Update</td>
							<td nowrap="nowrap"><# 
                                if(MainForm.Config.BF2S_CacheEnabled) 
                                    this.Write(DateTime.Now.AddMinutes(30).ToString("yyyy-MM-dd HH:mm:ss"));
                                else
                                    this.Write(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                            #></td>
						</tr>	
						<tr>
							<td>Kicked &amp; Banned</td>
							<td nowrap="nowrap"><# Write(this.Player["kicked"].ToString() + " / " + this.Player["banned"].ToString()); #></td>
						</tr>
						<tr>
							<td>Team: Kills, Damage, &amp; Vehicle Damage </td>

							<td nowrap="nowrap">
                                <#= this.FormatNumber(this.Player["teamkills"]) #> / 
                                <#= this.FormatNumber(this.Player["teamdamage"]) #> / 
                                <#= this.FormatNumber(this.Player["teamvehicledamage"]) #>
                            </td>
						</tr>
						<tr>
							<td>Cost ($50 base)</td>
							<td nowrap="nowrap"><#= this.FormatFloat(this.CostPerHour, 4) #> 
                                <acronym title="Cents Per Hour">cph</acronym>
                            </td>
						</tr>
					</table>
				</div>
				<!-- END COL RIGHT -->

				<hr class="clear" />

				<table border="0" cellspacing="0" cellpadding="0" id="unlocks" class="basic-stat">
					<tr>
						<th>Unlocks</th>
					</tr>
					<tr>
						<td>
							<#
                            foreach(WeaponUnlock Weapon in PlayerUnlocks)
							{ #>
								<div class="unlock-inline" onmouseover="show_mine(this);" onmouseout="hide_mine(this);">
									<a href="http://wiki.bf2s.com/weapons/unlocks/<#= Weapon.Name.ToLower() #>">
                                        <img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/unlocks/<#= Weapon.State #>/<#= Weapon.Id #>.png');" width="115" height="33" alt="" />
                                    </a>
									<div class="unlock-pop dir-left">
										<img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/unlocks/full/<#= Weapon.Id #>.jpg');" width="128" height="128" alt="" />
										<strong>Click for more about the <#= Weapon.Name #></strong>
									</div>
								</div>
							<# } #>
						</td>
					</tr>
				</table>

				<table border="0" cellspacing="0" cellpadding="0" id="awards" class="stat">
					<tr>
						<th colspan="2">Awards</th>
					</tr>
					<tr>
						<td>Badges</td>
						<td class="awards-row">
                        <#
                            int j = 0;
							foreach(KeyValuePair<string, List<Award>> Award in this.PlayerBadges)
							{ 
                                int Id = Award.Value[0].Id;
                                int level = Award.Value[0].Level;
                            #>
								<div class="award-inline" onMouseOver="show_mine(this);" onMouseOut="hide_mine(this);">
									<img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/<#
									if (level > 0)
										this.Write("front/" + Id + "_" + level);
									else
										this.Write("locked/" + Id + "_0");
									#>.png');" width="42" height="42" alt="" />
									<div class="award-pop dir-<#
										if (j < StatsData.Badges.Count / 2)
                                            this.Write("left");
										else
											this.Write("right");

                                        j++;
										#>">
										<p>
											<img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/perspective/<# this.Write(Id + "_" + level); #>.jpg');" width="128" height="128" alt="" />
											<strong><#= StatsData.Badges[Award.Key] #></strong>
										</p>
										<ul>
											<li><strong>Basic</strong><#= this.FormatAwardDate(Award.Value[1].Earned) #></li>
											<li><strong>Veteran</strong><#= this.FormatAwardDate(Award.Value[2].Earned) #></li>
											<li><strong>Expert</strong><#= this.FormatAwardDate(Award.Value[3].Earned) #></li>
										</ul>
									</div>
								</div>
							<# } #>
							</tr>
							<tr>
								<td>Medals</td>
								<td class="awards-row extra-space">
								<#
                                    j = 0;
							        foreach(KeyValuePair<string, Award> Award in this.PlayerMedals)
							        { 
                                        int Id = Award.Value.Id;
                                        int level = Award.Value.Level;
                                    #>
										<div class="award-inline" onMouseOver="show_mine(this);" onMouseOut="hide_mine(this);">
											<img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/<#
									        if (level > 0)
										        this.Write("front/" + Id);
									        else
										        this.Write("locked/" + Id);
									        #>.png');" width="42" height="42" alt="" />
											<div class="award-pop dir-<#
										        if (j < StatsData.Medals.Count / 2)
                                                    this.Write("left");
										        else
											        this.Write("right");

                                                j++;
										        #>">
												<p>
													<img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/perspective/<#= Id #>.jpg');" width="128" height="128" alt="" />
													<strong><#= StatsData.Medals[Award.Key] #></strong>
												</p>
												<ul>
													<li>First received: <#= this.FormatAwardDate(Award.Value.First) #></li>
													<li>Last awarded: <#= this.FormatAwardDate(Award.Value.Earned) #></li>
													<li>Total awards: <#= this.FormatNumber(Award.Value.Level) #></li>
												</ul>
											</div>
										</div>
									<# } #>
								</td>
							</tr>
							<tr>
								<td>Ribbons</td>
								<td class="awards-row extra-space">
								<#
                                    j = 0;
							        foreach(KeyValuePair<string, Award> Award in this.PlayerRibbons)
							        { 
                                        int Id = Award.Value.Id;
                                        int level = Award.Value.Level;
                                    #>
										<div class="award-inline" onMouseOver="show_mine(this);" onMouseOut="hide_mine(this);">
											<img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/<#
									        if (level > 0)
										        this.Write("front/" + Id);
									        else
										        this.Write("locked/" + Id);
									        #>.png');" width="42" height="42" alt="" />
											<div class="award-pop dir-<#
										        if (j < StatsData.Ribbons.Count / 2)
                                                    this.Write("left");
										        else
											        this.Write("right");

                                                j++;
										        #>">
												<p>
													<img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/perspective/<#= Id #>.jpg');" width="128" height="128" alt="" />
													<strong><#= StatsData.Ribbons[Award.Key] #></strong>
												</p>
												<ul>
													<li>First received: <#= this.FormatAwardDate(Award.Value.Earned) #></li>
												</ul>
											</div>
										</div>
									<# } #>
								</td>
							</tr>

									<tr>
										<td>SF Badges<br />&amp; Medals</td>
										<td class="awards-row">
										 <#
                                            j = 0;
							                foreach(KeyValuePair<string, List<Award>> Award in this.PlayerSFBadges)
							                { 
                                                int Id = Award.Value[0].Id;
                                                int level = Award.Value[0].Level;
                                            #>
								                <div class="award-inline" onMouseOver="show_mine(this);" onMouseOut="hide_mine(this);">
									                <img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/<#
									                if (level > 0)
										                this.Write("front/" + Id + "_" + level);
									                else
										                this.Write("locked/" + Id + "_0");
									                #>.png');" width="42" height="42" alt="" />
									                <div class="award-pop dir-<#
										                if (j < ((StatsData.SfBadges.Count + StatsData.SfMedals.Count ) / 2))
                                                            this.Write("left");
										                else
											                this.Write("right");

                                                        j++;
										                #>">
										                <p>
											                <img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/perspective/<# this.Write(Id + "_" + level); #>.jpg');" width="128" height="128" alt="" />
											                <strong><#= StatsData.SfBadges[Award.Key] #></strong>
										                </p>
										                <ul>
											                <li><strong>Basic</strong><#= this.FormatAwardDate(Award.Value[1].Earned) #></li>
											                <li><strong>Veteran</strong><#= this.FormatAwardDate(Award.Value[2].Earned) #></li>
											                <li><strong>Expert</strong><#= this.FormatAwardDate(Award.Value[3].Earned) #></li>
										                </ul>
									                </div>
								                </div>
							                <# } 
                                            j = 0;
                                            foreach(KeyValuePair<string, Award> Award in this.PlayerSFMedals)
							                { 
                                                int Id = Award.Value.Id;
                                                int level = Award.Value.Level;
                                            #>
										        <div class="award-inline" onMouseOver="show_mine(this);" onMouseOut="hide_mine(this);">
											        <img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/<#
									                if (level > 0)
										                this.Write("front/" + Id);
									                else
										                this.Write("locked/" + Id);
									                #>.png');" width="42" height="42" alt="" />
											        <div class="award-pop dir-<#
										                if (j < ((StatsData.SfBadges.Count + StatsData.SfMedals.Count ) / 2))
                                                            this.Write("left");
										                else
											                this.Write("right");

                                                        j++;
										                #>">
												        <p>
													        <img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/perspective/<#= Id #>.jpg');" width="128" height="128" alt="" />
													        <strong><#= StatsData.SfMedals[Award.Key] #></strong>
												        </p>
												        <ul>
													        <li>First received: <#= this.FormatAwardDate(Award.Value.First) #></li>
													        <li>Last awarded: <#= this.FormatAwardDate(Award.Value.Earned) #></li>
													        <li>Total awards: <#= this.FormatNumber(Award.Value.Level) #></li>
												        </ul>
											        </div>
										        </div>
									        <# } #> 
										</td>
									</tr>

									<tr>
										<td>SF Ribbons</td>
										<td class="awards-row extra-space">
										<#
                                        j = 0;
							            foreach(KeyValuePair<string, Award> Award in this.PlayerSFRibbons)
							            { 
                                            int Id = Award.Value.Id;
                                            int level = Award.Value.Level;
                                        #>
										    <div class="award-inline" onMouseOver="show_mine(this);" onMouseOut="hide_mine(this);">
											    <img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/<#
									            if (level > 0)
										            this.Write("front/" + Id);
									            else
										            this.Write("locked/" + Id);
									            #>.png');" width="42" height="42" alt="" />
											    <div class="award-pop dir-<#
										            if (j < StatsData.Ribbons.Count / 2)
                                                        this.Write("left");
										            else
											            this.Write("right");

                                                    j++;
										            #>">
												    <p>
													    <img src="<#= this.Root #>/spacer.gif" style="background: url('<#= this.Root #>/images/awards/perspective/<#= Id #>.jpg');" width="128" height="128" alt="" />
													    <strong><#= StatsData.SfRibbons[Award.Key] #></strong>
												    </p>
												    <ul>
													    <li>First received: <#= this.FormatAwardDate(Award.Value.Earned) #></li>
												    </ul>
											    </div>
										    </div>
									    <# } #>
										</td>
									</tr>
								</td>
							</tr>
						</table>
						<table border="0" cellspacing="0" cellpadding="0" id="tta" class="stat">
							<tr>
								<th colspan="2">Time To Advancement</th>
							</tr>
							<tr>
								<td>Rank</td>
								<td>
                                <#
								foreach(Rank Rnk in this.NextPlayerRanks)
								{ #>
									<img src="<#= this.Root #>/images/ranks/progress/rank_<#= Rnk.Id #>.png" alt="" style="float: left; margin: 0 5px 5px 0" height="83" width="83" />			
									<p>
										<strong>Next Rank: <#= StatsData.GetRankName(Rnk.Id) #></strong>
                                        <#
                                        if(Rnk.MissingDesc != String.Empty)
                                        {
                                            this.Write("<br />" + Rnk.MissingDesc + "\n");
                                        } #>
									</p>
									<div class="progressbar">
										<div class="progress" style="width: <#= Rnk.PercentComplete #>%"><span><#= Rnk.PercentComplete #>%</span></div>
									</div>
									<small>Score: <#= this.FormatNumber(this.Player["score"]) #> of <#= this.FormatNumber(Rnk.MinPoints) #>. 
                                        At your historical rate, you should earn <#= this.FormatNumber(Rnk.PointsNeeded) #> in <#= this.FormatNumber(Rnk.DaysToComplete) #> days 
                                        (or <#= this.FormatTime(Rnk.TimeToComplete) #> straight).
                                    </small>
									<div class="clear"> </div>
								<# } #>
								</td>
							</tr>
						</table>

						<a id="secondhome" href="<#= this.Root #>"> </a>
						<!-- end content == footer below -->

						<hr class="clear" />
						<br><br><br><br><br><br><br><br><br>
					</tr>
				</table>
			</div> <!-- Page 2 -->
			<div id="footer">Generated using the <a href='http://bf2statistics.com'>BF2Statistics Control Center</a></div>
		</div> <!-- page 1 --><!-- content -->
		<ul id="navitems">
			<li><a href="<#= this.Root #>">Home</a></li>
			<li><a href="<#= this.Root #>/myleaderboard">My Leader Board</a></li>
			<li><a href="<#= this.Root #>/rankings">Rankings</a></li>
			<!--
		    <li><a href="<#= this.Root #>/ubar">UBAR</a></li>
		    <li><a href="http://wiki.bf2s.com/">Wiki</a></li>
            -->
		</ul>
		<form action="<#= this.Root #>/search" method="post" id="getstats">
			<label for="pid">Get Stats</label>
			<input type="text" name="searchvalue" id="pid" value="<#= this.Player["id"] #>" />
			<input type="submit" class="btn" value="Go" />
		</form>
	</div>
</body>
</html>
